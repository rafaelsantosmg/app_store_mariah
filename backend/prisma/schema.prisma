// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Payments {
  id          Int      @id @default(autoincrement())
  method      String?
  installment String?
  createdAt   DateTime @default(now()) @map("created_at")
  salesId     Int?
  dailySalesId Int?     @map("daily_sales_id")

  Sales       Sales?   @relation(fields: [salesId], references: [id])
  DailySales   DailySales? @relation(fields: [dailySalesId], references: [id])

  @@map("payments")
}

model DailySales {
  id               Int @id @default(autoincrement())
  date             DateTime
  cashAmount       Float   @map("cash_amount")
  pixAmount        Float   @map("pix_amount")
  creditAmount     Float   @map("credit_amount")
  debitAmount      Float   @map("debit_amount")
  totalAmount      Float   @map("total_amount")
  totalDiscount    Float   @map("total_discount")
  totalProfit      Float   @map("total_profit")
  totalSales       Float   @map("total_sales")

  Sales           Sales[]
  Payments        Payments[]
  @@map("daily_sales")
}

model Sales {
  id          Int       @id @default(autoincrement())
  discount    Float
  totalPrice  Float     @map("total_price")
  salesPrice  Float     @map("sales_price")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  paymentId     Int?      @map("payment_id")
  dailySalesId  Int?      @map("daily_sales_id")

  SalesProducts SalesProduct[]  // Relação com a tabela intermediária
  Payments      Payments[]
  DailySales    DailySales? @relation(fields: [dailySalesId], references: [id])

  @@map("sales")
}

model Products {
  id           Int       @id @default(autoincrement())
  name         String
  description  String?
  costPrice    Float     @map("cost_price")
  salePrice    Float     @map("sale_price")
  profitMargin Float    @map("profit_margin")
  image        String?
  stockType    String    @map("stock_type")
  stock        Float
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  SalesProducts SalesProduct[]  // Relação com a tabela intermediária

  @@map("products")
}

model SalesProduct {
  id         Int       @id @default(autoincrement())
  saleId     Int       @map("sale_id")
  productId  Int       @map("product_id")
  quantity   Float

  Sale       Sales     @relation(fields: [saleId], references: [id])
  Product    Products  @relation(fields: [productId], references: [id])

  @@map("sales_products")
}
